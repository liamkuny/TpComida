{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { useOverlayTriggerState as $9Xvoh$useOverlayTriggerState } from \"@react-stately/overlays\";\nimport { useState as $9Xvoh$useState } from \"react\";\nfunction $a28c903ee9ad8dc5$export$79fefeb1c2091ac3(props) {\n  var overlayTriggerState = $9Xvoh$useOverlayTriggerState(props);\n  var _$9Xvoh$useState = $9Xvoh$useState(null),\n    _$9Xvoh$useState2 = _slicedToArray(_$9Xvoh$useState, 2),\n    focusStrategy1 = _$9Xvoh$useState2[0],\n    setFocusStrategy = _$9Xvoh$useState2[1];\n  return _objectSpread(_objectSpread({\n    focusStrategy: focusStrategy1\n  }, overlayTriggerState), {}, {\n    open: function open() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle: function toggle() {\n      var focusStrategy = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  });\n}\nexport { $a28c903ee9ad8dc5$export$79fefeb1c2091ac3 as useMenuTriggerState };","map":{"version":3,"names":["$a28c903ee9ad8dc5$export$79fefeb1c2091ac3","props","overlayTriggerState","$9Xvoh$useOverlayTriggerState","_$9Xvoh$useState","$9Xvoh$useState","_$9Xvoh$useState2","_slicedToArray","focusStrategy1","setFocusStrategy","_objectSpread","open","focusStrategy","arguments","length","undefined","toggle"],"sources":["C:\\Users\\devandroid\\Desktop\\BIEEN\\TpComida\\node_modules\\@react-stately\\menu\\dist\\packages\\@react-stately\\menu\\src\\index.ts","C:\\Users\\devandroid\\Desktop\\BIEEN\\TpComida\\node_modules\\@react-stately\\menu\\dist\\packages\\@react-stately\\menu\\src\\useMenuTriggerState.ts"],"sourcesContent":["/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nexport {useMenuTriggerState} from './useMenuTriggerState';\n\nexport type {MenuTriggerProps} from '@react-types/menu';\nexport type {MenuTriggerState} from './useMenuTriggerState';\n","/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\n\nimport {FocusStrategy} from '@react-types/shared';\nimport {MenuTriggerProps} from '@react-types/menu';\nimport {OverlayTriggerState, useOverlayTriggerState} from '@react-stately/overlays';\nimport {useState} from 'react';\n\nexport interface MenuTriggerState extends OverlayTriggerState {\n  /** Controls which item will be auto focused when the menu opens. */\n  readonly focusStrategy: FocusStrategy,\n\n  /** Opens the menu. */\n  open(focusStrategy?: FocusStrategy | null): void,\n\n  /** Toggles the menu. */\n  toggle(focusStrategy?: FocusStrategy | null): void\n}\n\n/**\n * Manages state for a menu trigger. Tracks whether the menu is currently open,\n * and controls which item will receive focus when it opens.\n */\nexport function useMenuTriggerState(props: MenuTriggerProps): MenuTriggerState  {\n  let overlayTriggerState = useOverlayTriggerState(props);\n  let [focusStrategy, setFocusStrategy] = useState<FocusStrategy>(null);\n\n  return {\n    focusStrategy,\n    ...overlayTriggerState,\n    open(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.open();\n    },\n    toggle(focusStrategy: FocusStrategy = null) {\n      setFocusStrategy(focusStrategy);\n      overlayTriggerState.toggle();\n    }\n  };\n}\n"],"mappings":";;;;;;SCgCgBA,yCAAmBA,CAACC,KAAuB,EAAqB;EAC9E,IAAIC,mBAAmB,GAAGC,6BAAsB,CAACF,KAAK;EACtD,IAAAG,gBAAA,GAAwCC,eAAQ,CAAgB,IAAI;IAAAC,iBAAA,GAAAC,cAAA,CAAAH,gBAAA;IAA/DI,cAAa,GAAAF,iBAAA;IAAEG,gBAAgB,GAAAH,iBAAA;EAEpC,OAAAI,aAAA,CAAAA,aAAA;mBACEF;EAAa,GACVN,mBAAmB;IACtBS,IAAI,WAAAA,KAAA,EAAsC;MAAA,IAArCC,aAA4B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACtCJ,gBAAgB,CAACG,aAAa;MAC9BV,mBAAmB,CAACS,IAAI;IAC1B,CAAC;IACDK,MAAM,WAAAA,OAAA,EAAsC;MAAA,IAArCJ,aAA4B,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,IAAI;MACxCJ,gBAAgB,CAACG,aAAa;MAC9BV,mBAAmB,CAACc,MAAM;IAC5B;EAAC;AAEL"},"metadata":{},"sourceType":"module","externalDependencies":[]}