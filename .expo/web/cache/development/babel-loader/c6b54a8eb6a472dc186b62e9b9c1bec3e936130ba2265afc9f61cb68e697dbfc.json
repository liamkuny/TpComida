{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Clipboard from \"react-native-web/dist/exports/Clipboard\";\nexport function useClipboard() {\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    hasCopied = _React$useState2[0],\n    setHasCopied = _React$useState2[1];\n  var _React$useState3 = React.useState(''),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    value = _React$useState4[0],\n    setValue = _React$useState4[1];\n  var onCopy = function _callee(copiedValue) {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          if (!Clipboard) {\n            _context.next = 3;\n            break;\n          }\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(Clipboard.setString(copiedValue));\n        case 3:\n          setValue(copiedValue);\n          setHasCopied(true);\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }, null, null, null, Promise);\n  };\n  return {\n    value: value,\n    onCopy: onCopy,\n    hasCopied: hasCopied\n  };\n}","map":{"version":3,"names":["React","Clipboard","useClipboard","_React$useState","useState","_React$useState2","_slicedToArray","hasCopied","setHasCopied","_React$useState3","_React$useState4","value","setValue","onCopy","_callee","copiedValue","_regeneratorRuntime","async","_callee$","_context","prev","next","awrap","setString","stop","Promise"],"sources":["C:\\Users\\devandroid\\Desktop\\BIEEN\\TpComida\\node_modules\\native-base\\lib\\module\\hooks\\useClipboard.ts"],"sourcesContent":["import React from 'react';\nimport { Clipboard } from 'react-native';\n\nexport function useClipboard() {\n  const [hasCopied, setHasCopied] = React.useState(false);\n  const [value, setValue] = React.useState<string>('');\n  const onCopy = async (copiedValue: string) => {\n    if (Clipboard) {\n      await Clipboard.setString(copiedValue);\n    }\n    setValue(copiedValue);\n    setHasCopied(true);\n  };\n  return {\n    value,\n    onCopy,\n    hasCopied,\n  };\n}\n"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAAA,OAAAC,SAAA;AAGA,OAAO,SAASC,YAATA,CAAA,EAAwB;EAC7B,IAAAC,eAAA,GAAkCH,KAAK,CAACI,QAAN,CAAe,KAAf,CAAlC;IAAAC,gBAAA,GAAAC,cAAA,CAAAH,eAAA;IAAOI,SAAD,GAAAF,gBAAA;IAAYG,YAAZ,GAAAH,gBAAA;EACN,IAAAI,gBAAA,GAA0BT,KAAK,CAACI,QAAN,CAAuB,EAAvB,CAA1B;IAAAM,gBAAA,GAAAJ,cAAA,CAAAG,gBAAA;IAAOE,KAAD,GAAAD,gBAAA;IAAQE,QAAR,GAAAF,gBAAA;EACN,IAAMG,MAAM,GAAG,SAAAC,QAAOC,WAAP;IAAA,OAAAC,mBAAA,CAAAC,KAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAA,KACTpB,SAAJ;YAAAkB,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAAL,mBAAA,CAAAM,KAAA,CACQrB,SAAS,CAACsB,SAAV,CAAoBR,WAApB,CAAN;QAAA;UAEFH,QAAQ,CAACG,WAAD,CAAR;UACAP,YAAY,CAAC,IAAD,CAAZ;QAAA;QAAA;UAAA,OAAAW,QAAA,CAAAK,IAAA;MAAA;IAAA,qBAAAC,OAAA;EAAA,CALF;EAOA,OAAO;IACLd,KADK,EACLA,KADK;IAELE,MAFK,EAELA,MAFK;IAGLN,SAAA,EAAAA;EAHK,CAAP;AAKD"},"metadata":{},"sourceType":"module","externalDependencies":[]}