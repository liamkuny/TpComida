{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useContext } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport axios from \"axios\";\nimport { Badge, Button, Center, HStack } from 'native-base';\nimport { ComidasContext } from \"../contextState\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar API_KEY = \"1fcffc9826e745be90f1f569128f1a5c\";\nfunction AgregarPlato(id) {\n  return _regeneratorRuntime.async(function AgregarPlato$(_context) {\n    while (1) switch (_context.prev = _context.next) {\n      case 0:\n        _context.next = 2;\n        return _regeneratorRuntime.awrap(axios.get(\"https://api.spoonacular.com/recipes/\" + id + \"/information\", {\n          params: {\n            apiKey: API_KEY\n          }\n        }).then(function (response) {\n          return response.data;\n        }).catch(function () {\n          return null;\n        }));\n      case 2:\n        return _context.abrupt(\"return\", _context.sent);\n      case 3:\n      case \"end\":\n        return _context.stop();\n    }\n  }, null, null, null, Promise);\n}\nexport default function plato(_ref) {\n  var data = _ref.data,\n    isMenu = _ref.isMenu,\n    setModal = _ref.setModal;\n  var platoOff = false;\n  var colorScheme = \"coolGray\";\n  var context = useContext(ComidasContext);\n  platoOff = context.menu.some(function (plato) {\n    return plato.title === data.title || context.menu.length == 4;\n  });\n  if (platoOff) {\n    colorScheme = \"success\";\n  }\n  return _jsxs(Center, {\n    children: [_jsxs(HStack, {\n      space: 2,\n      children: [_jsx(Text, {\n        children: data.title\n      }), data.vegan ? _jsx(Badge, {\n        colorScheme: \"success\",\n        children: \"Vegano\"\n      }) : null]\n    }), isMenu ? _jsx(_Fragment, {\n      children: _jsxs(HStack, {\n        space: 2,\n        justifyContent: \"center\",\n        children: [_jsx(Button, {\n          colorScheme: \"danger\",\n          onPress: function onPress() {\n            context.setMenu(context.menu.filter(function (item) {\n              return item.title != data.title;\n            }));\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Eliminar\"\n          })\n        }), _jsx(Button, {\n          colorScheme: \"info\",\n          onPress: function onPress() {\n            setModal(data);\n          },\n          children: _jsx(Text, {\n            style: {\n              color: 'white'\n            },\n            children: \"Detalles\"\n          })\n        })]\n      })\n    }) : _jsx(Button, {\n      onPress: function _callee() {\n        var newPlato, vegan, notVegan;\n        return _regeneratorRuntime.async(function _callee$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(AgregarPlato(data.id));\n            case 2:\n              newPlato = _context2.sent;\n              vegan = 0;\n              notVegan = 0;\n              context.menu.forEach(function (element) {\n                element.vegan ? vegan++ : notVegan++;\n              });\n              if (!(newPlato.vegan && vegan == 2 || !newPlato.vegan && notVegan == 2)) {\n                _context2.next = 8;\n                break;\n              }\n              return _context2.abrupt(\"return\", null);\n            case 8:\n              context.setMenu([].concat(_toConsumableArray(context.menu), [newPlato]));\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, null, null, null, Promise);\n      },\n      disabled: platoOff,\n      color: 'danger',\n      children: \"A\\xF1adir Plato\"\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","Text","axios","Badge","Button","Center","HStack","ComidasContext","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","API_KEY","AgregarPlato","id","_regeneratorRuntime","async","AgregarPlato$","_context","prev","next","awrap","get","params","apiKey","then","response","data","catch","abrupt","sent","stop","Promise","plato","_ref","isMenu","setModal","platoOff","colorScheme","context","menu","some","title","length","children","space","vegan","justifyContent","onPress","setMenu","filter","item","style","color","_callee","newPlato","notVegan","_callee$","_context2","forEach","element","concat","_toConsumableArray","disabled"],"sources":["C:/Users/devandroid/Desktop/BIEEN/TpComida/componentes/Plato.js"],"sourcesContent":["import React, {useContext} from 'react';\r\nimport {Text} from 'react-native';\r\nimport axios from \"axios\";\r\nimport { Badge, Button, Center, HStack } from 'native-base';\r\nimport { ComidasContext } from '../contextState';\r\n\r\nconst API_KEY = \"1fcffc9826e745be90f1f569128f1a5c\";\r\n\r\nasync function AgregarPlato(id) {\r\n  return await axios.get(`https://api.spoonacular.com/recipes/${id}/information`, { \r\n    params: {\r\n      apiKey: API_KEY\r\n    }    \r\n  })  \r\n  .then(function (response) {\r\n    return response.data;\r\n  })\r\n  .catch(() => {\r\n    return null;\r\n  });\r\n}\r\n\r\nexport default function plato({data, isMenu, setModal}) {\r\n  let platoOff = false;\r\n  let colorScheme = \"coolGray\";\r\n\r\n  const context = useContext(ComidasContext);\r\n\r\n  platoOff = context.menu.some(plato => {\r\n    return plato.title === data.title || context.menu.length == 4\r\n  })\r\n  if(platoOff) {\r\n    colorScheme = \"success\"\r\n  }\r\n\r\n  return( \r\n      <Center>\r\n      <HStack space={2}>\r\n        <Text>{data.title}</Text>\r\n        {data.vegan ?\r\n            <Badge colorScheme=\"success\">Vegano</Badge>\r\n            : null\r\n        }\r\n      </HStack>\r\n      {\r\n        isMenu ?\r\n        <>\r\n        <HStack space={2} justifyContent=\"center\">\r\n          <Button colorScheme=\"danger\" onPress={() => {\r\n            context.setMenu(context.menu.filter(item => item.title != data.title));\r\n          }}>\r\n            <Text style={{color:'white'}}>Eliminar</Text>\r\n          </Button>\r\n          <Button colorScheme=\"info\" onPress={() => {\r\n            setModal(data);\r\n          }}\r\n          >\r\n          <Text style={{color:'white'}}>Detalles</Text>\r\n          </Button>\r\n        </HStack>\r\n        </>\r\n        :\r\n        <Button onPress={async () => {\r\n          let newPlato = await AgregarPlato(data.id);\r\n          let vegan = 0;\r\n          let notVegan = 0;\r\n          context.menu.forEach(element => {\r\n            element.vegan ? vegan++ : notVegan++;\r\n          });\r\n          if (newPlato.vegan && vegan == 2 || !newPlato.vegan && notVegan == 2) {\r\n            return null;\r\n          }\r\n          context.setMenu([...context.menu, newPlato]);\r\n          }} disabled={platoOff} color={'danger'}>AÃ±adir Plato</Button>\r\n      }\r\n      </Center>\r\n  );\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}